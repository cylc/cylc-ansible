---

# Install visualisation components?

- import_tasks: visualisation.yml
  when: cylc_visualisation|bool

# Install dependent packages and modules...

- name: Install packages
  package:
    name:
    - at
    - make
    - python
    - unzip
  notify: Start atd

- name: Install Python packages
  pip:
    name:
    - cryptography==2.7
    - empy==3.3.4
    - pyOpenSSL==19.0.0
    - requests==2.22.0
    - urllib3==1.25.3
  become: yes

# Get and unpack the release...

- name: Get Cylc release ({{ cylc_version }})
  get_url:
    url: https://github.com/cylc/cylc-flow/archive/{{ cylc_version }}.zip
    dest: /opt/{{ cylc_version }}.zip
  become: yes

- name: Unpack
  unarchive:
    src: /opt/{{ cylc_version }}.zip
    dest: /opt
    remote_src: yes
    creates: "{{ cylc_home }}"
  become: yes

- name: Check unpack directory
  stat:
    path: "{{ cylc_home }}"
  register: home_stat

- name: Assert unpack directory
  assert:
    that:
    - home_stat.stat.exists
    - home_stat.stat.isdir

# Build and install...

- name: Build
  shell: PATH={{ cylc_home }}/bin:$PATH make  # noqa 304
  register: make_out
  changed_when: "'build succeeded' in make_out.stdout"
  args:
    chdir: "{{ cylc_home }}"
    creates: "{{ cylc_home }}/VERSION"
  become: yes

- name: Collect version
  command: cat {{ cylc_home }}/VERSION
  changed_when: false
  register: made_version

- name: Link
  file:
    src: "{{ cylc_home }}"
    dest: /opt/cylc
    state: link
  become: yes

- name: Copy cylc wrapper (to /usr/local/bin)
  copy:
    src: "{{ cylc_home }}/usr/bin/cylc"
    dest: /usr/local/bin/cylc
    remote_src: yes
    mode: 0755
  become: yes

- name: Add cylc variables to system-wide profile
  template:
    src: cylc-profile.sh.j2
    dest: /etc/profile.d/cylc-profile.sh
    owner: root
    group: root
    mode: 0644
  vars:
    installed_version: "{{ made_version.stdout }}"
  become: yes

- name: Housekeeping
  file:
    path: /opt/{{ cylc_version }}.zip
    state: absent
  become: yes

# Sanity check the installation...

- name: Test cylc version
  command: cylc version
  register: cylc_v
  changed_when: false

- name: Assert cylc version
  assert:
    that: cylc_v.stdout == '{{ made_version.stdout }}'

- name: Run cylc check-software
  shell: DISPLAY=:0 cylc check-software  # noqa 305
  register: check
  changed_when: false

- name: Display check result
  debug:
    msg: "{{ check.stdout_lines }}"
